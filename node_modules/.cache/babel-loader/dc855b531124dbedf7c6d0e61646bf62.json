{"ast":null,"code":"import _classCallCheck from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wyattreiman/Desktop/Clicky-Game/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Cards: Cards\n    };\n\n    _this.shuffleScoreCard = function (id) {\n      var clickedPuppyIds = _this.state.clickedPuppyIds;\n\n      if (clickedPuppyIds.includes(id)) {\n        _this.setState({\n          clickedPuppyIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n\n        return;\n      } else {\n        clickedPuppyIds.push(id);\n\n        if (clickedPuppyIds.length === 8) {\n          _this.setState({\n            score: 8,\n            status: \"You Won! Great Job, Smartie! Click to play again!\",\n            clickedPuppyIds: []\n          });\n\n          console.log('You Win');\n          return;\n        }\n\n        _this.setState({\n          pups: pups,\n          clickedPuppyIds: clickedPuppyIds,\n          score: clickedPuppyIds.length,\n          status: \" \"\n        });\n\n        for (var i = pups.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var _ref = [pups[j], pups[i]];\n          Cards[i] = _ref[0];\n          cards[j] = _ref[1];\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        class: \"navbar navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"navbar-brand mb-0 h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Score\")), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.Cards.map(function (Cards) {\n        return React.createElement(Card, {\n          id: Cards.id,\n          key: Cards.id,\n          image: Cards.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wyattreiman/Desktop/Clicky-Game/src/App.js"],"names":["React","Component","Cards","Wrapper","Card","App","state","shuffleScoreCard","id","clickedPuppyIds","includes","setState","score","status","push","length","console","log","pups","i","j","Math","floor","random","cards","map","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAGMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNJ,MAAAA,KAAK,EAALA;AADM,K;;UAKRK,gB,GAAmB,UAAAC,EAAE,EAAI;AACvB,UAAIC,eAAe,GAAG,MAAKH,KAAL,CAAWG,eAAjC;;AAEA,UAAGA,eAAe,CAACC,QAAhB,CAAyBF,EAAzB,CAAH,EAAgC;AAC9B,cAAKG,QAAL,CAAc;AAAEF,UAAAA,eAAe,EAAE,EAAnB;AAAuBG,UAAAA,KAAK,EAAE,CAA9B;AAAiCC,UAAAA,MAAM,EAAG;AAA1C,SAAd;;AACA;AACD,OAHD,MAGK;AACHJ,QAAAA,eAAe,CAACK,IAAhB,CAAqBN,EAArB;;AAEA,YAAGC,eAAe,CAACM,MAAhB,KAA2B,CAA9B,EAAgC;AAC9B,gBAAKJ,QAAL,CAAc;AAACC,YAAAA,KAAK,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE,mDAAnB;AAAwEJ,YAAAA,eAAe,EAAE;AAAzF,WAAd;;AACAO,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;AACD;;AAED,cAAKN,QAAL,CAAc;AAAEO,UAAAA,IAAI,EAAJA,IAAF;AAAQT,UAAAA,eAAe,EAAfA,eAAR;AAAyBG,UAAAA,KAAK,EAAEH,eAAe,CAACM,MAAhD;AAAwDF,UAAAA,MAAM,EAAE;AAAhE,SAAd;;AAEA,aAAK,IAAIM,CAAC,GAAGD,IAAI,CAACH,MAAL,GAAc,CAA3B,EAA8BI,CAAC,GAAG,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxC,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAR;AADwC,qBAEjB,CAACD,IAAI,CAACE,CAAD,CAAL,EAAUF,IAAI,CAACC,CAAD,CAAd,CAFiB;AAEvCjB,UAAAA,KAAK,CAACiB,CAAD,CAFkC;AAE7BK,UAAAA,KAAK,CAACJ,CAAD,CAFwB;AAGzC;AACF;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,KAAK,EAAC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,CADD,EAIC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKd,KAAL,CAAWJ,KAAX,CAAiBuB,GAAjB,CAAqB,UAAAvB,KAAK;AAAA,eACzB,oBAAC,IAAD;AACE,UAAA,EAAE,EAAEA,KAAK,CAACM,EADZ;AAEE,UAAA,GAAG,EAAEN,KAAK,CAACM,EAFb;AAGE,UAAA,KAAK,EAAEN,KAAK,CAACwB,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,OAA1B,CADJ,CAJD,CADF;AAgBD;;;;EAhDezB,S;;AAmDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\n\n\nclass App extends Component {\n\n  state = {\n    Cards\n  };\n  \n\n  shuffleScoreCard = id => {\n    let clickedPuppyIds = this.state.clickedPuppyIds;\n\n    if(clickedPuppyIds.includes(id)){\n      this.setState({ clickedPuppyIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedPuppyIds.push(id)\n\n      if(clickedPuppyIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedPuppyIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ pups, clickedPuppyIds, score: clickedPuppyIds.length, status: \" \" });\n\n      for (let i = pups.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [Cards[i], cards[j]] = [pups[j], pups[i]];\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <nav class=\"navbar navbar-dark bg-dark\">\n          <span class=\"navbar-brand mb-0 h1\">Score</span>\n       </nav>\n       <Wrapper>\n          {this.state.Cards.map(Cards => (\n            <Card\n              id={Cards.id}\n              key={Cards.id}\n              image={Cards.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}