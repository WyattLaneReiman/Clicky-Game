{"ast":null,"code":"import _classCallCheck from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wyattreiman/Desktop/Clicky-Game/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Cards: Cards,\n      clickedCardIds: clickedCardIds\n    };\n\n    _this.shuffleScoreCard = function (id) {\n      var clickedCardIds = _this.state.clickedCardIds;\n\n      if (clickedCardIds.includes(id)) {\n        _this.setState({\n          clickedCardIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n\n        return;\n      } else {\n        clickedCardIds.push(id);\n\n        if (clickedCardIds.length === 8) {\n          _this.setState({\n            score: 8,\n            status: \"You Won! Great Job, Smartie! Click to play again!\",\n            clickedCardIds: []\n          });\n\n          console.log('You Win');\n          return;\n        }\n\n        _this.setState({\n          Cards: Cards,\n          clickedCardIds: clickedCardIds,\n          score: clickedCardIds.length,\n          status: \" \"\n        });\n\n        for (var i = Cards.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var _ref = [Cards[j], Cards[i]];\n          Cards[i] = _ref[0];\n          Cards[j] = _ref[1];\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        class: \"navbar navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"navbar-brand mb-0 h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Score\")), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.Cards.map(function (Cards) {\n        return React.createElement(Card, {\n          shuffleScoreCard: _this2.shuffleScoreCard,\n          id: Cards.id,\n          key: Cards.id,\n          image: Cards.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wyattreiman/Desktop/Clicky-Game/src/App.js"],"names":["React","Component","Cards","Wrapper","Card","App","state","clickedCardIds","shuffleScoreCard","id","includes","setState","score","status","push","length","console","log","i","j","Math","floor","random","map","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAGMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNJ,MAAAA,KAAK,EAALA,KADM;AAENK,MAAAA,cAAc,EAAdA;AAFM,K;;UAMRC,gB,GAAmB,UAAAC,EAAE,EAAI;AACvB,UAAIF,cAAc,GAAG,MAAKD,KAAL,CAAWC,cAAhC;;AAEA,UAAGA,cAAc,CAACG,QAAf,CAAwBD,EAAxB,CAAH,EAA+B;AAC7B,cAAKE,QAAL,CAAc;AAAEJ,UAAAA,cAAc,EAAE,EAAlB;AAAsBK,UAAAA,KAAK,EAAE,CAA7B;AAAgCC,UAAAA,MAAM,EAAG;AAAzC,SAAd;;AACA;AACD,OAHD,MAGK;AACHN,QAAAA,cAAc,CAACO,IAAf,CAAoBL,EAApB;;AAEA,YAAGF,cAAc,CAACQ,MAAf,KAA0B,CAA7B,EAA+B;AAC7B,gBAAKJ,QAAL,CAAc;AAACC,YAAAA,KAAK,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE,mDAAnB;AAAwEN,YAAAA,cAAc,EAAE;AAAxF,WAAd;;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;AACD;;AAED,cAAKN,QAAL,CAAc;AAAET,UAAAA,KAAK,EAALA,KAAF;AAASK,UAAAA,cAAc,EAAdA,cAAT;AAAyBK,UAAAA,KAAK,EAAEL,cAAc,CAACQ,MAA/C;AAAuDF,UAAAA,MAAM,EAAE;AAA/D,SAAd;;AAEA,aAAK,IAAIK,CAAC,GAAGhB,KAAK,CAACa,MAAN,GAAe,CAA5B,EAA+BG,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzC,cAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAR;AADyC,qBAElB,CAAChB,KAAK,CAACiB,CAAD,CAAN,EAAWjB,KAAK,CAACgB,CAAD,CAAhB,CAFkB;AAExChB,UAAAA,KAAK,CAACgB,CAAD,CAFmC;AAE9BhB,UAAAA,KAAK,CAACiB,CAAD,CAFyB;AAG1C;AACF;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAM,QAAA,KAAK,EAAC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH,CADD,EAIC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKb,KAAL,CAAWJ,KAAX,CAAiBqB,GAAjB,CAAqB,UAAArB,KAAK;AAAA,eACzB,oBAAC,IAAD;AACE,UAAA,gBAAgB,EAAE,MAAI,CAACM,gBADzB;AAEE,UAAA,EAAE,EAAEN,KAAK,CAACO,EAFZ;AAGE,UAAA,GAAG,EAAEP,KAAK,CAACO,EAHb;AAIE,UAAA,KAAK,EAAEP,KAAK,CAACsB,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,OAA1B,CADJ,CAJD,CADF;AAiBD;;;;EAlDevB,S;;AAqDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\n\n\nclass App extends Component {\n\n  state = {\n    Cards,\n    clickedCardIds\n  };\n  \n\n  shuffleScoreCard = id => {\n    let clickedCardIds = this.state.clickedCardIds;\n\n    if(clickedCardIds.includes(id)){\n      this.setState({ clickedCardIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedCardIds.push(id)\n\n      if(clickedCardIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedCardIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ Cards, clickedCardIds, score: clickedCardIds.length, status: \" \" });\n\n      for (let i = Cards.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [Cards[i], Cards[j]] = [Cards[j], Cards[i]];\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <nav class=\"navbar navbar-dark bg-dark\">\n          <span class=\"navbar-brand mb-0 h1\">Score</span>\n       </nav>\n       <Wrapper>\n          {this.state.Cards.map(Cards => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={Cards.id}\n              key={Cards.id}\n              image={Cards.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}