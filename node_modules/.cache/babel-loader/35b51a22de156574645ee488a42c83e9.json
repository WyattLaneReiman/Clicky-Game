{"ast":null,"code":"import _classCallCheck from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wyattreiman/Desktop/Clicky-Game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wyattreiman/Desktop/Clicky-Game/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/ScoreCard\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Cards: Cards,\n      clickedCardIds: [],\n      goal: 12,\n      score: 0,\n      status: \"\"\n    };\n\n    _this.clickPicture = function (id) {\n      // Arrange the pictures in a random manner\n      var shuffledArray = _this.shuffleArray(cards);\n\n      _this.setState({\n        cards: shuffledArray\n      }); // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n\n\n      if (_this.state.clickedArray.includes(id)) {\n        _this.setState({\n          score: 0,\n          clickedArray: [],\n          message: \"Incorrect!! Game Over ☹️ Click an image to start again!\",\n          shakeit: \"true\"\n        });\n      } else {\n        _this.setState({\n          clickedArray: _this.state.clickedArray.concat([id]),\n          score: _this.state.score + 1,\n          message: \"Correct!! 🙂\",\n          shakeit: \"false\"\n        });\n      } // set topscore = score if score>topscore.\n\n\n      if (_this.state.score > _this.state.topScore) {\n        _this.setState({\n          topScore: _this.state.score\n        });\n      } // shake the wrapper if shakeit is set to true\n\n    };\n\n    _this.shuffleArray = function (picturesArray) {\n      for (var i = picturesArray.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [picturesArray[j], picturesArray[i]];\n        picturesArray[i] = _ref[0];\n        picturesArray[j] = _ref[1];\n      }\n\n      return picturesArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark bg-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-brand mb-0 h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Clicky-Game\")), React.createElement(Score, {\n        total: this.state.score,\n        goal: 12,\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.Cards.map(function (Cards) {\n        return React.createElement(Card, {\n          shuffleScoreCard: _this2.shuffleScoreCard,\n          id: Cards.id,\n          key: Cards.id,\n          image: Cards.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      })), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Copyright \\xA9\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/wyattreiman/Desktop/Clicky-Game/src/App.js"],"names":["React","Component","Cards","Wrapper","Card","Score","App","state","clickedCardIds","goal","score","status","clickPicture","id","shuffledArray","shuffleArray","cards","setState","clickedArray","includes","message","shakeit","concat","topScore","picturesArray","i","length","j","Math","floor","random","map","shuffleScoreCard","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Cards from \"./cards.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Card from \"./components/Card\";\nimport Score from \"./components/ScoreCard\"\n\n\nclass App extends Component {\n\n  state = {\n    Cards,\n    clickedCardIds: [],\n    goal: 12,\n    score: 0,\n    status: \"\",\n  };\n  \n\n  // shuffleScoreCard = id => {\n  //   let clickedCardIds = this.state.clickedCardIds;\n\n  //   if(clickedCardIds.includes(id)){\n  //     this.setState({ clickedCardIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n  //     return;\n  //   }else{\n  //     clickedCardIds.push(id)\n\n  //     if(clickedCardIds.length === 12){\n  //       this.setState({score: 12, status: \"You Win!\", clickedCardIds: []});\n  //       console.log('You Win');\n  //       return;\n  //     }\n\n  //     this.setState({ Cards, clickedCardIds, score: clickedCardIds.length, status: \" \" });\n\n  //     for (let i = Cards.length - 1; i > 0; i--) {\n  //       let w = Math.floor(Math.random() * (i + 1));\n  //       [Cards[i], Cards[w]] = [Cards[w], Cards[i]];\n  //     }\n  //   }\n  // }\n\n  clickPicture = id => {\n    // Arrange the pictures in a random manner\n    const shuffledArray = this.shuffleArray(cards);\n    this.setState({cards: shuffledArray});\n    // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n    if (this.state.clickedArray.includes(id)) {\n      this.setState({ score: 0, clickedArray: [], message: \"Incorrect!! Game Over ☹️ Click an image to start again!\", shakeit: \"true\"});\n    }\n    else {\n      this.setState({\n        clickedArray: this.state.clickedArray.concat([id]),\n        score: this.state.score + 1,\n        message: \"Correct!! 🙂\",\n        shakeit: \"false\"\n      });\n    }\n    // set topscore = score if score>topscore.\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n    // shake the wrapper if shakeit is set to true\n  }\n  shuffleArray = (picturesArray) => {\n      for (let i = picturesArray.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\n      }\n      return picturesArray;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <nav className=\"navbar navbar-dark bg-dark\">\n          <span className=\"navbar-brand mb-0 h1\">Clicky-Game</span>\n       </nav>\n       <Score total={this.state.score}\n               goal={12}\n               status={this.state.status}\n               />\n       <Wrapper>\n          {this.state.Cards.map(Cards => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={Cards.id}\n              key={Cards.id}\n              image={Cards.image}\n            />\n          ))}\n        </Wrapper>\n        <footer>Copyright &copy;</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}